# SillyTavern 角色卡自动更新扩展 - 项目文档

## 1. 概述

**扩展名称:** 角色卡自动更新 (Auto Card Updater)
**版本:** 1.0.0
**作者:** Cline (AI Assisted), 默默 (实际贡献者)
**目标:** 将“角色卡自动更新”油猴脚本重构为一个标准的 SillyTavern 扩展。该扩展旨在为 SillyTavern 用户提供一个自动更新角色卡描述的工具。它允许用户配置自定义的 OpenAI 兼容 API，**仅基于最近的聊天记录**，为聊天中出现的**每一个非用户角色**自动生成角色描述（绿灯条目），并将每个角色的描述分别保存到当前角色主世界书的一个**特定于该角色和该聊天文件**的条目中。同时，脚本还会维护一个**人物总揽**（蓝灯条目），用于索引这些角色。

**核心特性 (从脚本继承):**
*   **多角色支持:** 能够识别聊天记录中的多个非用户角色，并为每个角色独立生成和更新世界书条目。
*   **自定义AI生成描述:** 用户可以指定 API 地址、密钥和模型，使用外部 AI 服务生成角色描述。
*   **双重提示词系统:** 分为“破甲预设” (定义AI角色行为) 和“角色卡生成预设” (定义描述生成任务与格式)。
*   **自动更新机制:** 基于用户设置的“新消息阈值 (M)”触发，同时M值也作为AI分析的上下文长度。
*   **世界书集成:** 生成的角色描述以特定格式（绿灯）保存到主世界书，并维护一个“人物总揽”索引（蓝灯）。
*   **灵活的配置:** 所有配置项将通过标准的扩展设置界面 (`settings.html`) 进行管理，并保存在浏览器 `localStorage` 中。
*   **标准扩展结构:** 遵循 SillyTavern 扩展开发规范，使用 `manifest.json`, `index.js`, `style.css`, `settings.html` 文件结构。

---

## 2. 开发与迁移日志

**迁移目标:** 将用户脚本 (Userscript) 重构为标准的 SillyTavern 扩展。
**日期:** 2025-06-09

### 2.1. 迁移步骤

1.  **创建扩展目录:**
    *   **操作:** 创建一个新的文件夹 `AutoCardUpdaterExtension` 来存放所有扩展文件。
    *   **状态:** 完成 (于 2025-06-09)

2.  **创建核心配置文件 (`manifest.json`):**
    *   **操作:** 创建 `manifest.json` 文件，用于定义扩展的基本信息、作者、版本以及引用的JS、CSS和设置文件。这是扩展的“身份证”。
    *   **状态:** 完成 (于 2025-06-09)

3.  **创建设置界面 (`settings.html`):**
    *   **操作:** 创建 `settings.html` 文件。这个文件将包含扩展在 SillyTavern 设置菜单中显示的UI布局。我们将把油猴脚本中动态生成的弹窗里的配置项（如API设置、提示词编辑区、更新阈值等）迁移到这个标准的、可折叠的抽屉式面板中。
    *   **状态:** 完成 (于 2025-06-09)

4.  **创建样式文件 (`style.css`):**
    *   **操作:** 创建 `style.css` 文件，并将所有与扩展UI相关的CSS规则从油猴脚本中迁移过来。这包括设置面板、按钮、输入框等元素的样式。
    *   **状态:** 完成 (于 2025-06-09)

5.  **迁移与重构JavaScript (`index.js`):**
    *   **操作:** 创建 `index.js` 文件。将油猴脚本的核心逻辑（除头部和IIFE包装器外）复制过来。重构初始化流程，移除所有手动注入UI（如 `addAutoCardMenuItem_ACU`）和不必要的加载等待逻辑。创建新的初始化函数，该函数将负责加载配置、绑定在 `settings.html` 中定义的UI元素的事件，并注册SillyTavern的事件监听器。
    *   **状态:** 完成 (于 2025-06-09)

6.  **最终审查与完成:**
    *   **操作:** 审查所有文件 (`manifest.json`, `settings.html`, `style.css`, `index.js`) 确保它们遵循扩展规范，代码逻辑正确，并且所有功能都已正确迁移。准备好进行测试。
    *   **状态:** 完成 (于 2025-06-09)

---
### 2.2. 实现自动更新功能
**日期:** 2025-06-09
**目标:** 为扩展添加自动更新功能，允许从GitHub仓库自动检查和安装新版本。

1.  **更新项目文档 (`项目文档.txt`):**
    *   **操作:** 添加新的章节，记录自动更新功能的实现步骤和细节。
    *   **状态:** 完成 (于 2025-06-09)

2.  **分析参考实现:**
    *   **操作:** 详细研究 `quest-system-extension` 中的 `Updater` 对象 (`index.js`) 和相关设置界面 (`settings.html`)，以理解其工作原理。
    *   **状态:** 完成 (于 2025-06-09)

3.  **修改清单文件 (`manifest.json`):**
    *   **操作:** 添加 `"homePage"` (指向GitHub仓库) 和 `"auto_update": true` 字段，以启用SillyTavern的内置更新检查机制。版本号更新至 `1.1.0`。
    *   **状态:** 完成 (于 2025-06-09)

4.  **更新设置界面 (`settings.html`):**
    *   **操作:** 从 `quest-system-extension` 借鉴UI布局，在设置面板中添加了新的“关于与更新”部分，包含版本信息显示和“检查更新”按钮。
    *   **状态:** 完成 (于 2025-06-09)

5.  **集成更新逻辑 (`index.js`):**
    *   **操作:** 将 `quest-system-extension` 的 `Updater` 逻辑迁移并适配到本扩展的 `index.js` 中。已添加 `Updater_ACU` 对象并集成了相应的事件绑定和初始化调用。
    *   **状态:** 完成 (于 2025-06-09)

6.  **完成与测试:**
    *   **操作:** 在实现所有功能后，进行全面测试，确保更新流程顺畅无误。
    *   **状态:** 完成 (于 2025-06-09)

---
## 3. 迁移完成

**日期:** 2025-06-09
**结果:** “角色卡自动更新”油猴脚本已成功重构为 SillyTavern 标准扩展。所有核心文件已创建并放置在 `AutoCardUpdaterExtension` 目录中。扩展现在可以通过标准的 SillyTavern 机制加载和使用。
